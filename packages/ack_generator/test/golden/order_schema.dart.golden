// Generated code for Order and OrderItem schemas
// This is a placeholder - replace with actual generator output

class OrderItemSchema extends SchemaModel<OrderItem> {
  @override
  ObjectSchema get definition => ObjectSchema({
    'productId': Ack.string.notEmpty(),
    'quantity': Ack.integer.positive(),
    'price': Ack.double,
  }, required: ['productId', 'quantity', 'price']);

  const OrderItemSchema();

  OrderItemSchema._internal(Map<String, Object?> data) : super.validated(data);

  @override
  OrderItemSchema createValidated(Map<String, Object?> data) => OrderItemSchema._internal(data);

  // Getters for validated data
  String get productId => getValue<String>('productId');
  int get quantity => getValue<int>('quantity');
  double get price => getValue<double>('price');
}

class OrderSchema extends SchemaModel<Order> {
  @override
  ObjectSchema get definition => ObjectSchema({
    'id': Ack.string.notEmpty(),
    'items': Ack.list(OrderItemSchema().definition),
    'createdAt': DateTimeSchema().definition,
  }, required: ['id', 'items', 'createdAt']);

  const OrderSchema();

  OrderSchema._internal(Map<String, Object?> data) : super.validated(data);

  @override
  OrderSchema createValidated(Map<String, Object?> data) => OrderSchema._internal(data);

  // Getters for validated data
  String get id => getValue<String>('id');
  List<OrderItem> get items => getValue<List<OrderItem>>('items');
  DateTime get createdAt => getValue<DateTime>('createdAt');
}
